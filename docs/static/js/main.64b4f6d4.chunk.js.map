{"version":3,"sources":["components/AddCategory.js","helpers/GetGits.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","Gif-expertApp.js","index.js"],"names":["AddCategory","setCategorie","useState","inputValue","setinputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","getGits","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"uMA4BeA,EAzBY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACXC,mBAAS,IADE,mBACxCC,EADwC,KAC5BC,EAD4B,KAY/C,OACE,0BAAMC,SARa,SAACC,GACpBA,EAAEC,iBACFN,GAAa,SAACO,GAAD,OAAWL,GAAX,mBAA0BK,OACvCJ,EAAc,MAMZ,2BAAOK,KAAK,OACLC,MAAOP,EACPQ,SAde,SAACL,GACzBF,EAAcE,EAAEM,OAAOF,Y,uBCJbG,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAF,sDCCRO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAI/B,OAFAc,QAAQC,IAAI,UAGR,yBAAKC,UAAU,QACX,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KCLHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACbZ,mBAAS,CAC/BmB,KAAK,GACLe,SAAQ,IAH2B,mBAChCC,EADgC,KACzBC,EADyB,KAqBvC,OAfAC,qBAAU,WAEJ1B,EAAQC,GAGJ0B,MAAK,SAAAC,GAEFH,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,SAIvB,CAACtB,IAEIuB,EDlByBK,CAAa5B,GAAhCa,EAFuB,EAE5BN,KAAce,EAFc,EAEdA,QAErB,OACI,oCAEI,wBAAIJ,UAAU,4CAA4ClB,GACzDsB,GAAW,0CAGhB,yBAAKJ,UAAU,aAEHL,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACImB,IAAMnB,EAAIC,IACND,UEWhBoB,EA1BK,WAAK,IAAD,EACe1C,mBAAS,CAAC,aADzB,mBACd2C,EADc,KACFC,EADE,KAKzB,OACA,oCACI,4CACA,kBAAC,EAAD,CAAa7C,aAAc6C,IAC3B,6BACA,4BAEQD,EAAWtB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI6B,IAAK7B,EACLA,SAAUA,U,MCZ9BiC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.64b4f6d4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategorie }) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setCategorie((cats) => [inputValue, ...cats]);\r\n    setinputValue(\"\");\r\n    //console.log(' enviado')\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" \r\n             value={inputValue} \r\n             onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategorie: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","\r\n\r\n export const getGits =async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=tOABssXIdHe3QlBdR0TSMB0aGdH8a6PW`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id : img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n          }\r\n","import React from 'react'\r\n\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n\r\n    console.log('IMagen')\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,  loading }=useFetchGifs(category);\r\n          \r\n    return (\r\n        <>\r\n        \r\n            <h3 className=\"animate__animated animate__bounceOutLeft\">{category}</h3>\r\n            {loading && <p >Cargando...</p>}\r\n    \r\n           \r\n        <div className=\"card-grid\">          \r\n                {\r\n                    images.map(img=>(\r\n                        <GifGridItem\r\n                            key= {img.id}\r\n                            {...img} /> \r\n                    ))\r\n                }\r\n                  \r\n            </div> \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGits } from \"../helpers/GetGits\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n   const [state, setstate] = useState({\r\n       data:[],\r\n       loading:true  \r\n   });\r\n\r\n   useEffect(()=>{\r\n\r\n         getGits(category)\r\n         \r\n         \r\n            .then(imgs=>{\r\n                \r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n            } )\r\n\r\n   },[category])\r\n\r\n   return state;     \r\n}\r\n","import React,{useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nconst GifExpertApp = ()=>{\r\n    const [categories, setcategories] = useState(['megadeth']);\r\n    //const handleAdd = (e)=>{\r\n     //   setcategories([...categories, 'caballeros']);\r\n    //};\r\nreturn(\r\n<>\r\n    <h2>GifExpertApp</h2>\r\n    <AddCategory setCategorie={setcategories}/>\r\n    <hr />\r\n    <ol>\r\n        {\r\n            categories.map(category=>(\r\n                <GifGrid \r\n                    key={category}\r\n                    category={category}\r\n                />\r\n                    ) )\r\n           \r\n\r\n        }\r\n    </ol>\r\n</>\r\n)\r\n}\r\n\r\nexport default  GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './Gif-expertApp';\nimport './index.css'\n\n\n\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}